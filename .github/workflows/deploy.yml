name: CI/CD NestJS â†’ EC2

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  OWNER: reitansora
  IMAGE_NAME: payment-processor-subscription

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install & build
        run: |
          npm ci
          npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push image
        run: |
          docker build -t $REGISTRY/$OWNER/$IMAGE_NAME:latest .
          docker push    $REGISTRY/$OWNER/$IMAGE_NAME:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Copy Compose & Nginx to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_PUBLIC_DNS }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'deploy/docker-compose.yml,deploy/nginx.conf'
          target: '/home/ubuntu/app/'
          strip_components: 1

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_PUBLIC_DNS }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo rm -rf /home/ubuntu/app/nginx
            sudo mkdir -p /home/ubuntu/app/nginx
            sudo mv /home/ubuntu/app/nginx.conf /home/ubuntu/app/nginx/nginx.conf

            sudo cat > /home/ubuntu/app/.env <<EOF
            DB_HOST=${{ secrets.DB_URL }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASS=${{ secrets.DB_PASS }}
            DB_NAME=${{ secrets.DB_NAME }}
            PAYPAL_CLIENT_ID=${{ secrets.PAYPAL_CLIENT_ID }}
            PAYPAL_CLIENT_SECRET=${{ secrets.PAYPAL_CLIENT_SECRET }}
            PAYMENT_SERVICE_CANCEL_URL=${{ secrets.PAYMENT_SERVICE_CANCEL_URL }}
            PAYMENT_SERVICE_COMPLETE_URL=${{ secrets.PAYMENT_SERVICE_COMPLETE_URL }}
            PAYPAL_PLAN_BASIC=${{ secrets.PAYPAL_PLAN_BASIC }}
            PAYPAL_PLAN_STANDARD=${{ secrets.PAYPAL_PLAN_STANDARD }}
            PAYPAL_PLAN_PREMIUM=${{ secrets.PAYPAL_PLAN_PREMIUM }}
            EOF

            cd /home/ubuntu/app
            docker compose down || true
            docker compose pull
            docker compose up -d --force-recreate --remove-orphans
